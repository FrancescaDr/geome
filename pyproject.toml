[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]


[project]
name = "gpu_spatial_graph_pipeline"
version = "0.0.1"
description = "The repo provides a set of tools for creating PyTorch Geometric (PyG) data objects from AnnData objects, which are commonly used for storing and manipulating single-cell genomics data. In addition, the repo includes functionality for creating PyTorch Lightning (PyTorch-Lightning) DataModule objects from the PyG data objects, which can be used to create graph neural network (GNN) data pipelines. The PyG data objects represent graphs, where the nodes represent cells and the edges represent relationships between the cells, and can be used to perform GNN tasks such as node classification, graph classification, and link prediction. The repo is written in Python and utilizes the PyTorch, PyTorch Geometric, and PyTorch-Lightning libraries."
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "Marcella Toth"},
]
maintainers = [
    {name = "Marcella Toth", email = "toth.marcella@gmail.com"},
]
urls.Documentation = "https://gpu_spatial_graph_pipeline.readthedocs.io/"
urls.Source = "https://github.com/theislab/gpu_spatial_graph_pipeline"
urls.Home-page = "https://github.com/theislab/gpu_spatial_graph_pipeline"
dependencies = [
    "anndata",
    # for debug logging (referenced from the issue template)
    "session-info"
]

[project.optional-dependencies]
dev = [
    # CLI for bumping the version number
    "bump2version",
    "pre-commit",
    "twine>=4.0.2"
]
doc = [
    "sphinx>=4",
    "sphinx-book-theme>=0.3.3",
    "myst-nb",
    "sphinxcontrib-bibtex>=1.0.0",
    "sphinx-autodoc-typehints",
    # For notebooks
    "ipykernel",
    "ipython",
    "sphinx-copybutton",
]
test = [
    "pytest",
    "pytest-cov",
]

[tool.hatch.build.targets.wheel]
packages = ['src/gpu_spatial_graph_pipeline']

[tool.coverage.run]
source = ["gpu_spatial_graph_pipeline"]
omit = [
    "**/test_*.py",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
xfail_strict = true
addopts = [
    "--import-mode=importlib",  # allow using test files with same name
]

[tool.isort]
include_trailing_comma = true
multi_line_output = 3
profile = "black"
skip_glob = ["docs/*"]

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.jupytext]
formats = "ipynb,md"

[tool.cruft]
skip = [
    "tests",
    "src/**/__init__.py",
    "src/**/basic.py",
    "docs/api.md",
    "docs/changelog.md",
    "docs/references.bib",
    "docs/references.md",
    "docs/notebooks/example.ipynb"
]
